$render: true !default;
$color: darkblue !default;
$background-color: transparent !default;
$background-color-hover: rgb(228, 228, 228) !default;
$margin: .7rem !default;
$padding: 1rem !default;
$padding-x: 1.5rem !default;
$padding-y: .6rem !default;
$button-padding: $padding-y $padding-x;
$border-transparent: 1px transparent solid !default;
$border-default: 1px solid $background-color-hover !default;
$border-hover: 1px solid $background-color-hover !default;
$border-radius: .1rem !default;
$border-radius-rounded: 99rem / 16;
$display: inline-flex !default;
$align-items: center !default;
$justify-content: center !default;
$cursor: pointer !default;

// *************************************************
// ******************** imports ********************
// *************************************************

@use 'styles.scss';

@mixin renderComponent($renderComponent: $render, $className: null) {

  @if $renderComponent {

    #{if($className, $className, '.fp-button')},
    button[type] {
      @include button();
    }

  }
}


@mixin button() {
  @include styles.flex-box();
  display: inline-flex;
  flex-direction: row;
  justify-content: center;
  background-color: $background-color;
  border-radius: $border-radius;
  border: $border-transparent;
  cursor: $cursor;
  margin-bottom: $margin;
  font-weight: normal;

  &:hover,
  &:active,
  &:focus {
    border: $border-transparent;
  }

  &[type=reset],
  &[type=button],
  &[type=submit] {
    padding: $button-padding;
    border: $border-default;

    &:hover,
    &:active,
    &:focus {
      background-color: transparent;
      background-color: darken($background-color-hover, 10);

      border: $border-default;
    }
  }

}

@mixin links() {

  a,
  .fp-button-link {

    &[role=button] {
      display: inline-flex;
      text-decoration: none;
      background-color: $background-color;
      border: none;
      border-radius: $border-radius;
      color: $color;

      &:hover,
      &:active,
      &:focus {
        border: none;
      }

      >span,
      >strong,
      >em {
        border: $border-transparent;
        padding: $padding-y $padding-x;
        border: $border-default;
        font-weight: normal;
        font-style: normal;

        &:hover {
          background-color: darken($background-color-hover, 10);
        }
      }

      >strong {
        background-color: $background-color-hover;
      }

      >em {
        background-color: $background-color-hover;
        border-radius: $border-radius-rounded;

        &:active,
        &:hover,
        &:focus {
          border-radius: $border-radius-rounded !important;
          background-color: darken($background-color-hover, 10);

        }

      }

    }
  }

}

@include renderComponent()
