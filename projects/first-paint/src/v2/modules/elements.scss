// set variables
// TODO Search and replace name with CSS tag/element name
@use "./utilities/maps";
@use "./utilities/mixins" as mix;
@use "./utilities/functions" as fn;
$render: true !default;
$prefix: "layout";
$tokens: ();

// render component mixin
@mixin renderComponent($renderContent: $render, $className: null) {
  @if ($renderContent) {
    html {
      @include maps.customProperties($tokens, $prefix);
    }
    @include elements();
  }
}

@mixin elements() {
  // TODO add mixin code
  p,
  li,
  blockquote,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    --dsp: block;
    font-size: var(--fs);
    text-decoration: var(--decoration);
  }
}

header,
footer,
section {
  min-height: var(--h);
  min-width: var(--w);
}

:any-link {
  color: var(--cl, var(--color));
  text-decoration: var(--decoration);
  font-size: var(--fs);
  + * {
    margin-inline-start: var(--ml);
    --ml: var(--rem);
  }
  :where(em, strong, b, div) {
    @include mix.button();
  }

  b {
    --bg: transparent;
    --border-s: solid;
    --border-cl: var(--light);
    --border-w: 2px;
  }

  em {
    --border-rad: 99rem;
  }

  strong,
  div {
    --dsp: var(--dsp-i);
    display: inline-flex;
  }

  &:hover {
    --decoration: underline;
  }
}

button {
  @include mix.button();
}

blockquote {
  --m: var(--xl);
  --p: var(--md);
  padding: var(--p);
  margin: var(--m);
  border: none;
  --border-w: thick;
  --border-s: solid;
  --border-cl: var(--light);
  border-left: var(--border-w) var(--border-s) var(--border-cl);
}

article {
  + article {
    margin-block-start: var(--mt);
  }
}

hr {
  --py: var(--2xl);
  margin-block: var(--py);
  border: none;
  --border-w: thin;
  --border-s: solid;
  --border-cl: var(--light);
  border-bottom: var(--border-w) var(--border-s) var(--border-cl);
}

[role="banner"] {
  background: var(--bg, var(--bg-cl));
  background-image: var(--bg-img);
  min-height: var(--h, var(--height));
  display: var(--dsp, flex);
  flex-direction: var(--direction);
  justify-content: var(--justify);
  align-items: var(--align, center);
  padding-block: var(--py, var(--p));
  padding-inline: var(--px, var(--p));
}

img[alt] {
  vertical-align: var(--valign, middle);
  width: var(--w);
  height: var(--h);
  padding: var(--p);
}

@mixin config($_color: null, $_background-color: null) {
  $elements-color: $_color !global;
  $elements-background-color: $_background-color !global;
}

@include renderComponent();
