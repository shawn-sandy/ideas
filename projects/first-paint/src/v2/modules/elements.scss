// set variables
// TODO Search and replace name with CSS tag/element name
@use "./utilities/maps";
@use "./utilities/mixins" as mix;
@use "./utilities/functions" as fn;
$render: true !default;
$prefix: "layout";
$tokens: ();

// render component mixin
@mixin renderComponent($renderContent: $render, $className: null) {
  @if ($renderContent) {
    // @include elements();
  }
}

*,
*::before,
*::after,
*::after {
  box-sizing: border-box;
}

body {
  color: var(--cl);
  min-height: var(--min-h, 100vh);
}

// page sections
main,
header,
footer,
section {
  background-color: var(--bg);
  color: var(--cl);
  width: var(--w);
  height: var(--h);
  margin-inline: var(--mx);
  margin-block: var(--my);
  padding-inline: var(--px);
  padding-block: var(--py);
}

// TODO add mixin code

blockquote {
  --dsp: block;
  font-size: var(--fs);
  text-decoration: var(--decoration);
  border: var(--border);
  padding: var(--p);
  margin: var(--m);
}

// layout containers
header,
footer,
section {
  min-height: var(--h);
  min-width: var(--w);
}

:any-link {
  color: var(--cl, var(--color));
  text-decoration: var(--decoration, none);
  font-size: var(--fs);
  + * {
    margin-inline-start: var(--ml);
    --ml: var(--rem);
  }
  :where(em, strong, b, div) {
    @include mix.button();
  }

  b {
    --bg: transparent;
    --border-s: solid;
    --border-cl: var(--light);
    --border-w: 2px;
  }

  em {
    --border-rad: 99rem;
  }

  strong,
  div {
    --dsp: var(--dsp-i);
    display: inline-flex;
  }
}

button {
  @include mix.button();
}

blockquote {
  --m: var(--xl);
  --p: var(--md);
  --border: none;
  --border-w: thick;
  --border-s: solid;
  --border-cl: var(--light);
  border-left: var(--border-w) var(--border-s) var(--border-cl);
}

article {
  + article {
    margin-block-start: var(--mt);
  }
}

hr {
  --py: var(--2xl);
  margin-block: var(--py);
  border: none;
  --border-w: thin;
  --border-s: solid;
  --border-cl: var(--light);
  border-bottom: var(--border-w) var(--border-s) var(--border-cl);
}

[role="banner"] {
  background: var(--bg, var(--bg-cl));
  background-image: var(--bg-img);
  min-height: var(--h, var(--height));
  display: var(--dsp, flex);
  flex-direction: var(--direction);
  justify-content: var(--justify);
  align-items: var(--align, center);
  padding-block: var(--py, var(--p));
  padding-inline: var(--px, var(--p));
}

img[alt] {
  vertical-align: var(--valign, middle);
  width: var(--w, auto);
  height: var(--h, auto);
  padding: var(--p);
}

@mixin config($_color: null, $_background-color: null) {
  $elements-color: $_color !global;
  $elements-background-color: $_background-color !global;
}
// label element
label[for] {
  em {
    font-style: var(--fs-style);

    &::after {
      content: "\2217";
      color: var(--danger, var(--border-cl));
    }
  }

  font-size: var(--fs, 0.9rem);
  display: var(--dsp, block);
  margin-bottom: var(--mb, 0.5rem);
}

:any-link:where(em strong b),
button {
  font-style: var(--fs-style, normal);
}

// text containers
p,
li,
ol,
dl,
div,
aside,
blockquote,
summary,
details,
figcaption {
  font-size: var(--fs, var(--fs-p));
  font-weight: var(--fw, var(--fw-p));
  font-style: var(--style, var(--fs-style));
  line-height: var(--lh, var(--lh-p));
  letter-spacing: var(--ls, var(--ls-p));
  text-align: var(--t-align);
  text-transform: var(--tt, var(--tt-p));
}

// elements containers
div,
[role="list"],
[role="listitem"],
aside {
  display: var(--dsp);
  justify-content: var(--justify);
  align-items: var(--align);
  flex-direction: var(--direction);
  flex-wrap: var(--wrap);
  margin-block: var(--my);
  margin-inline: var(--mx);
  padding-block: var(--py);
  padding-inline: var(--px);
  margin: var(--m);
  padding: var(--p);
}

// input elements

input[id],
textarea[id],
select[id] {
  background-color: var(--bg);
  display: var(--dsp);
  margin: var(--mt) var(--mr) var(--mb) var(--ml);
  padding: var(--p);
  width: var(--w);
  border: var(--border-w) var(--border-s) var(--border-cl);
  border-radius: var(--border-rad, 0.2rem);

  &:focus,
  &:focus-within {
    outline: none;
    border: var(--border-w) var(--border-s) var(--border-cl);
  }

  &::placeholder {
    font-style: var(--fs-style);
    color: var(--cl);
  }
}

@include renderComponent();
