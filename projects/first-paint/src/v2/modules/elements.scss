// set variables
// TODO Search and replace name with CSS tag/element name
@use './utilities/maps';
@use './utilities/mixins' as mix;
@use './utilities/functions' as fn;
$render: true !default;
$prefix: "layout";
$tokens: ();

// render component mixin
@mixin renderComponent($renderContent: $render, $className: null) {
  @if ($renderContent) {
    html {
      @include maps.customProperties($tokens, $prefix);
      @include elements();
    }
  }
}

@mixin button() {
  @include mix.margin();
  @include mix.padding();
  --fs-weight: var(--fs-medium);
  --justify: "center";
  --dp: var(--dsp-i);
  --min-h: var(--md);
  --p-y: var(--s4);
  --pl: var(--rem);
  --line-height: 0;
  --bg: lightgray;
  --bdr-radius: var(--rds);
  border-radius: var(--rds);
  justify-content: var(--justify);
  align-items: var(--fb-center);
  min-height: var(--min-h);
  padding: var(--p);
  padding-inline: var(--p-y);
  display: var(--dsp-i);
  background-color: var(--bg);
  border: var(--bdr);
  border-radius: var(--bdr-radius);
  font-weight: var(--fs-weight);
}

@mixin elements() {
  // TODO add mixin code
  p,
  li,
  aside,
  blockquote,
  em,
  strong,
  small,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: var(--fs);
    color: var(--cl);
    text-decoration: var(--decoration);
    text-shadow: none;
    text-transform: var(--transform);
  }
  * {
    box-shadow: var(--shadow);
    text-shadow: var(--text-shadow);
  }
}

:any-link {
  color: var(--cl);
  + * {
    margin-inline-start: var(--ml);
    --ml: var(--rem);
  }
  :where(em, strong, b, div) {
    @include mix.button();
  }

  b {
    --bg: transparent;
    --bdr: var(--bdr-1);
    border-width: 3px;
  }

  em {
    --bdr-radius: 99rem;
  }

  strong,
  div {
    --dp: var(--dsp-i);
    display: inline-flex;
  }
}

button {
  @include mix.button();
}

article {
  + article {
    margin-block-start: var(--mt);
  }
}

hr {
  --rem: var(--2xl);
  margin-block: var(--rem);
  border: var(--bdr);
  border-bottom: var(--bdr-1);
}

@mixin config($_color: null, $_background-color: null) {
  $elements-color: $_color !global;
  $elements-background-color: $_background-color !global;
}

// include render component
@include renderComponent();
